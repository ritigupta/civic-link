{"version":3,"sources":["images/obama.JPG","images/weld.jpg","images/amy.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","classes","this","props","react_default","a","createElement","className","root","AppBar_default","color","style","boxShadow","Toolbar_default","toolBar","Button_default","button","Fab_default","variant","cssRoot","class","Card_default","card","CardActionArea_default","CardMedia_default","media","height","paddingTop","image","require","title","CardContent_default","CardActions_default","size","Component","withStyles","theme","textAlign","width","palette","getContrastText","yellow","backgroundColor","&:hover","flexGrow","fab","margin","spacing","unit","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55f85a7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/obama.6a0dd777.JPG\";","module.exports = __webpack_public_path__ + \"static/media/weld.80ee7679.jpg\";","module.exports = __webpack_public_path__ + \"static/media/amy.ecb1f045.jpg\";","import React, { Component } from 'react';\n\n//import CivicToolbar from './components/CivicToolbar';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport yellow from '@material-ui/core/colors/yellow';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Fab from '@material-ui/core/Fab';\n\n//import Typography from '@material-ui/core/Typography';\n\n\nimport './App.css';\n\n\nconst styles = theme => ({  \n  toolBar: {\n    textAlign: 'left',\n\n  },\n  card: {\n    width: 301,\n    height: 492,\n  },\n  media: {\n    height: 250,\n  },\n  cssRoot: {\n    color: theme.palette.getContrastText(yellow[600]),\n    backgroundColor: yellow[600],\n    '&:hover': {\n      backgroundColor: yellow[700],\n    },\n  },\n  root: {\n    flexGrow: 1,\n  },\n  fab: {\n    margin: theme.spacing.unit,\n  },\n  \n});\n\nclass App extends Component {\n\n  render() {\n    const { classes } = this.props;  \n    return (\n      <div className=\"App\"> \n        <div className={classes.root}>\n          <AppBar color=\"none\" \n            style={{boxShadow: \"none\"}}>\n            <Toolbar className={classes.toolBar}>\n              <header>\n                CIVIC LINK\n              </header>\n              <Button className={classes.button}>get to know us</Button>\n              <Button className={classes.button}>get informed</Button>\n              <Fab variant=\"extended\" className={classes.cssRoot}>get involved</Fab>\n            </Toolbar>\n          </AppBar>\n        </div>\n        <body className=\"App-header\">\n          <div>\n            <div class=\"flex-container\">\n              <div class=\"flex-item\">\n                <h1>Make an informed vote.</h1>\n                <h2>Scroll to meet your candidates.</h2>\n              </div>\n              <div class=\"flex-item\">\n                <Card className={classes.card}>\n                  <CardActionArea>\n                    <CardMedia\n                      className={classes.media}\n                      style = {{ height: 0, paddingTop: '75%'}}\n                      image= {require (\"./images/obama.JPG\")}\n                      title=\"Barack Obama\"\n                    />\n                    <CardContent>\n                      <h3>\n                        Barack Obama\n                      </h3>\n                      <h4>\n                        Democrat\n                      </h4>\n                      <p>\n                        <br></br>Affordable health care\n                        <br></br>Immigration reform\n                        <br></br>Renewable energy\n                      </p>          \n                    </CardContent>\n                  </CardActionArea>\n                  <CardActions>\n                      <Button \n                        variant=\"contained\" \n                        size=\"medium\"\n                        className={classes.cssRoot}>\n                        view full profile\n                      </Button>\n                  </CardActions>\n                </Card>\n              </div>\n              <div class=\"flex-item\">\n                <Card className={classes.card}>\n                  <CardActionArea>\n                    <CardMedia\n                      className={classes.media}\n                      style = {{ height: 0, paddingTop: '75%'}}\n                      image= {require (\"./images/weld.jpg\")}\n                      title=\"William Weld\"\n                    />\n                    <CardContent>\n                      <h3>\n                        William Weld\n                      </h3>\n                      <h4>\n                        Republican\n                      </h4>\n                      <p>\n                        <br></br>Marriage equity\n                        <br></br>Drug policy reform\n                        <br></br>Loosening gun control\n                      </p>          \n                    </CardContent>\n                  </CardActionArea>\n                  <CardActions>\n                      <Button \n                        variant=\"contained\" \n                        size=\"medium\"\n                        className={classes.cssRoot}>\n                        view full profile\n                      </Button>\n                  </CardActions>\n                </Card>\n              </div>\n              <div class=\"flex-item\">\n                <Card className={classes.card}>\n                  <CardActionArea>\n                    <CardMedia\n                      className={classes.media}\n                      style = {{ height: 0, paddingTop: '75%'}}\n                      image= {require (\"./images/amy.jpg\")}\n                      title=\"Amy Klobuchar\"\n                    />\n                    <CardContent>\n                      <h3>\n                        Amy Klobuchar\n                      </h3>\n                      <h4>\n                        Democrat\n                      </h4>\n                      <p>\n                        <br></br>Education reform\n                        <br></br>Renewable energy\n                        <br></br>Support for veterans\n                      </p>          \n                    </CardContent>\n                  </CardActionArea>\n                  <CardActions>\n                      <Button \n                        variant=\"contained\" \n                        size=\"medium\" \n                        className={classes.cssRoot}>\n                        view full profile\n                      </Button>\n                  </CardActions>\n                </Card>\n              </div>\n            </div>\n          </div>\n        </body>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}